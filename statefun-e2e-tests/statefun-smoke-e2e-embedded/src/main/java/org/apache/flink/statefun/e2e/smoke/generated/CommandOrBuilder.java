// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commands.proto

package org.apache.flink.statefun.e2e.smoke.generated;

public interface CommandOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.apache.flink.statefun.e2e.smoke.Command)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.IncrementState increment = 1;</code>
   */
  boolean hasIncrement();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.IncrementState increment = 1;</code>
   */
  Command.IncrementState getIncrement();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.IncrementState increment = 1;</code>
   */
  Command.IncrementStateOrBuilder getIncrementOrBuilder();

  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.Send send = 2;</code>
   */
  boolean hasSend();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.Send send = 2;</code>
   */
  Command.Send getSend();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.Send send = 2;</code>
   */
  Command.SendOrBuilder getSendOrBuilder();

  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.SendAfter send_after = 3;</code>
   */
  boolean hasSendAfter();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.SendAfter send_after = 3;</code>
   */
  Command.SendAfter getSendAfter();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.SendAfter send_after = 3;</code>
   */
  Command.SendAfterOrBuilder getSendAfterOrBuilder();

  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.SendEgress send_egress = 4;</code>
   */
  boolean hasSendEgress();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.SendEgress send_egress = 4;</code>
   */
  Command.SendEgress getSendEgress();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.SendEgress send_egress = 4;</code>
   */
  Command.SendEgressOrBuilder getSendEgressOrBuilder();

  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.AsyncOperation async_operation = 5;</code>
   */
  boolean hasAsyncOperation();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.AsyncOperation async_operation = 5;</code>
   */
  Command.AsyncOperation getAsyncOperation();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.AsyncOperation async_operation = 5;</code>
   */
  Command.AsyncOperationOrBuilder getAsyncOperationOrBuilder();

  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.Verify verify = 6;</code>
   */
  boolean hasVerify();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.Verify verify = 6;</code>
   */
  Command.Verify getVerify();
  /**
   * <code>.org.apache.flink.statefun.e2e.smoke.Command.Verify verify = 6;</code>
   */
  Command.VerifyOrBuilder getVerifyOrBuilder();

  public Command.CommandCase getCommandCase();
}
